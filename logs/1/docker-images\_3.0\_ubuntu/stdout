Sending build context to Docker daemon  17.41kB
Step 1/72 : FROM        ubuntu:18.04 AS base
 ---> cf0f3ca922e0
Step 2/72 : WORKDIR     /tmp/workdir
 ---> Using cache
 ---> d8521871d262
Step 3/72 : RUN set -xe &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 tzdata gnutls-bin &&         apt-get autoremove -y &&         apt-get clean -y
 ---> Using cache
 ---> c3edae8e8da5
Step 4/72 : FROM base as build
 ---> c3edae8e8da5
Step 5/72 : ARG        PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig
 ---> Using cache
 ---> 7549078d6be7
Step 6/72 : ARG        LD_LIBRARY_PATH=/opt/ffmpeg/lib
 ---> Using cache
 ---> fc399a756f7f
Step 7/72 : ARG        PREFIX=/opt/ffmpeg
 ---> Using cache
 ---> 2a639846e7da
Step 8/72 : ARG        MAKEFLAGS="-j2"
 ---> Using cache
 ---> 6f8fec1ff48b
Step 9/72 : RUN set -xe &&                 buildDeps="autoconf                 automake                 cmake                 curl                 bzip2                 libexpat1-dev                 g++                 gcc                 git                 gnutls-dev                 gperf                 libtool                 make                 perl                 pkg-config                 python                 libssl-dev                 yasm                 zlib1g-dev" &&         apt-get -yqq update &&         apt-get install -yq --no-install-recommends ${buildDeps}
 ---> Using cache
 ---> 84e2f3a8cb6c
Step 10/72 : ENV SRC=/usr/local
 ---> Using cache
 ---> 4212117cd0c8
Step 11/72 : ARG NASM_VERSION=2.14.02
 ---> Using cache
 ---> bba9352f5b75
Step 12/72 : RUN set -xe &&         DIR=/tmp/nasm && mkdir "${DIR}" && cd "${DIR}" &&         curl -sL http://www.nasm.us/pub/nasm/releasebuilds/${NASM_VERSION}/nasm-${NASM_VERSION}.tar.xz |         tar -Jx --strip-components=1 &&         ./configure &&         make "${MAKEFLAGS}" &&         make install
 ---> Using cache
 ---> d4b7e0a1ac14
Step 13/72 : ARG OPENCOREAMR_VERSION=0.1.5
 ---> Using cache
 ---> 219226bc4f66
Step 14/72 : RUN set -xe &&         DIR=/tmp/opencore-amr &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/opencore-amr/opencore-amr/opencore-amr-${OPENCOREAMR_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> ed8838767858
Step 15/72 : ARG OGG_VERSION=1.3.2
 ---> Using cache
 ---> 93c123d2cda7
Step 16/72 : ARG OGG_SHA256SUM="e19ee34711d7af328cb26287f4137e70630e7261b17cbe3cd41011d73a654692 libogg-1.3.2.tar.gz"
 ---> Using cache
 ---> 17d7885dd3ca
Step 17/72 : RUN set -xe &&         DIR=/tmp/ogg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/ogg/libogg-${OGG_VERSION}.tar.gz &&         echo ${OGG_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libogg-${OGG_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> d13de69995e2
Step 18/72 : ARG OPUS_VERSION=1.3.1
 ---> Using cache
 ---> 2f5d16062ad2
Step 19/72 : ARG OPUS_SHA256SUM="65b58e1e25b2a114157014736a3d9dfeaad8d41be1c8179866f144a2fb44ff9d  opus-1.3.1.tar.gz"
 ---> Using cache
 ---> 5cb2f939cc1f
Step 20/72 : RUN set -xe &&         DIR=/tmp/opus &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://archive.mozilla.org/pub/opus/opus-${OPUS_VERSION}.tar.gz &&         echo ${OPUS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f opus-${OPUS_VERSION}.tar.gz &&         autoreconf -fiv &&         ./configure --prefix="${PREFIX}" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> e94aff7213c8
Step 21/72 : ARG VORBIS_VERSION=1.3.6
 ---> Using cache
 ---> 137671d244a2
Step 22/72 : ARG VORBIS_SHA256SUM="6ed40e0241089a42c48604dc00e362beee00036af2d8b3f46338031c9e0351cb  libvorbis-1.3.6.tar.gz"
 ---> Using cache
 ---> 070b443071e9
Step 23/72 : RUN set -xe &&         DIR=/tmp/vorbis &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/vorbis/libvorbis-${VORBIS_VERSION}.tar.gz &&         echo ${VORBIS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libvorbis-${VORBIS_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 5b310735b373
Step 24/72 : ARG THEORA_VERSION=1.1.1
 ---> Using cache
 ---> c58df38433d7
Step 25/72 : ARG THEORA_SHA256SUM="40952956c47811928d1e7922cda3bc1f427eb75680c3c37249c91e949054916b libtheora-1.1.1.tar.gz"
 ---> Using cache
 ---> fd202f70ebb8
Step 26/72 : RUN set -xe &&         DIR=/tmp/theora &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xiph.org/releases/theora/libtheora-${THEORA_VERSION}.tar.gz &&         echo ${THEORA_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f libtheora-${THEORA_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}" --with-ogg="${PREFIX}" --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 0f9d2fe542a7
Step 27/72 : ARG VPX_VERSION=1.8.0
 ---> Using cache
 ---> e691fc6e199e
Step 28/72 : RUN set -xe &&         DIR=/tmp/vpx &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://codeload.github.com/webmproject/libvpx/tar.gz/v${VPX_VERSION} |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --enable-vp8 --enable-vp9 --enable-vp9-highbitdepth --enable-pic --enable-shared         --disable-debug --disable-examples --disable-docs --disable-install-bins  &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 7b7832c0fee8
Step 29/72 : ARG WEBP_VERSION=1.0.2
 ---> Using cache
 ---> 3cb28e8a041d
Step 30/72 : RUN set -xe &&         DIR=/tmp/webp &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://storage.googleapis.com/downloads.webmproject.org/releases/webp/libwebp-${WEBP_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --enable-shared  &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 2eb4575e6bfa
Step 31/72 : ARG LAME_VERSION=3.100
 ---> Using cache
 ---> 97d07e7f058c
Step 32/72 : RUN set -xe &&         DIR=/tmp/lame &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://versaweb.dl.sourceforge.net/project/lame/lame/$(echo ${LAME_VERSION} | sed -e 's/[^0-9]*\([0-9]*\)[.]\([0-9]*\)[.]\([0-9]*\)\([0-9A-Za-z-]*\)/\1.\2/')/lame-${LAME_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --enable-shared --enable-nasm --enable-pic --disable-frontend &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 9d3a3dec73d8
Step 33/72 : ARG XVID_VERSION=1.3.4
 ---> Using cache
 ---> ec01cdb4040b
Step 34/72 : ARG XVID_SHA256SUM="4e9fd62728885855bc5007fe1be58df42e5e274497591fec37249e1052ae316f xvidcore-1.3.4.tar.gz"
 ---> Using cache
 ---> fe9ea56f096b
Step 35/72 : RUN set -xe &&         DIR=/tmp/xvid &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO http://downloads.xvid.org/downloads/xvidcore-${XVID_VERSION}.tar.gz &&         echo ${XVID_SHA256SUM} | sha256sum --check &&         tar -zx -f xvidcore-${XVID_VERSION}.tar.gz &&         cd xvidcore/build/generic &&         ./configure --prefix="${PREFIX}" --bindir="${PREFIX}/bin" --datadir="${DIR}" --enable-shared --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 39b28648462f
Step 36/72 : ARG FDKAAC_VERSION=0.1.6
 ---> Using cache
 ---> 41447c3f36c7
Step 37/72 : RUN set -xe &&         DIR=/tmp/fdk-aac &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/mstorsjo/fdk-aac/archive/v${FDKAAC_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         autoreconf -fiv &&         ./configure --prefix="${PREFIX}" --enable-shared --datadir="${DIR}" &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> b56e5d8eea14
Step 38/72 : ARG OPENJPEG_VERSION=2.3.1
 ---> Using cache
 ---> 97d8fd5af429
Step 39/72 : RUN set -xe &&         DIR=/tmp/openjpeg &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://github.com/uclouvain/openjpeg/archive/v${OPENJPEG_VERSION}.tar.gz |         tar -zx --strip-components=1 &&         cmake -DBUILD_THIRDPARTY:BOOL=ON -DCMAKE_INSTALL_PREFIX="${PREFIX}" . &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 8106968b7ce1
Step 40/72 : ARG FREETYPE_VERSION=2.10.1
 ---> Using cache
 ---> 9faaf9a54e97
Step 41/72 : ARG FREETYPE_SHA256SUM="3a60d391fd579440561bf0e7f31af2222bc610ad6ce4d9d7bd2165bca8669110  freetype-2.10.1.tar.gz"
 ---> Using cache
 ---> a877aeab324d
Step 42/72 : RUN set -xe &&         DIR=/tmp/freetype &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://download.savannah.gnu.org/releases/freetype/freetype-${FREETYPE_VERSION}.tar.gz &&         echo ${FREETYPE_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f freetype-${FREETYPE_VERSION}.tar.gz &&         ./configure --prefix="${PREFIX}" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 78a096265ae9
Step 43/72 : ARG LIBVIDSTAB_VERSION=1.1.0
 ---> Using cache
 ---> 090972119591
Step 44/72 : ARG LIBVIDSTAB_SHA256SUM="14d2a053e56edad4f397be0cb3ef8eb1ec3150404ce99a426c4eb641861dc0bb v1.1.0.tar.gz"
 ---> Using cache
 ---> 72a53d409421
Step 45/72 : RUN set -xe &&         DIR=/tmp/vid.stab &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/georgmartius/vid.stab/archive/v${LIBVIDSTAB_VERSION}.tar.gz &&        echo ${LIBVIDSTAB_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f v${LIBVIDSTAB_VERSION}.tar.gz &&         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" . &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 0a429d4c3ebe
Step 46/72 : ARG FRIBIDI_VERSION=0.19.7
 ---> Using cache
 ---> 3d5dbd50cef7
Step 47/72 : ARG FRIBIDI_SHA256SUM="3fc96fa9473bd31dcb5500bdf1aa78b337ba13eb8c301e7c28923fea982453a8 0.19.7.tar.gz"
 ---> Using cache
 ---> 68894b80f232
Step 48/72 : RUN set -xe &&         DIR=/tmp/fribidi &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/fribidi/fribidi/archive/${FRIBIDI_VERSION}.tar.gz &&         echo ${FRIBIDI_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${FRIBIDI_VERSION}.tar.gz &&         sed -i 's/^SUBDIRS =.*/SUBDIRS=gen.tab charset lib/' Makefile.am &&         ./bootstrap --no-config &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared &&         make -j 1 &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> bb6eb80c8158
Step 49/72 : ARG FONTCONFIG_VERSION=2.12.6
 ---> Using cache
 ---> f67ee5f261b6
Step 50/72 : RUN set -xe &&         DIR=/tmp/fontconfig &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://www.freedesktop.org/software/fontconfig/release/fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&        tar -jx --strip-components=1 -f fontconfig-${FONTCONFIG_VERSION}.tar.bz2 &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> b622c70906fa
Step 51/72 : ARG LIBASS_VERSION=0.14.0
 ---> Using cache
 ---> 9db770b5a4ae
Step 52/72 : ARG LIBASS_SHA256SUM="82e70ee1f9afe2e54ab4bf6510b83bb563fcb2af978f0f9da82e2dbc9ae0fd72  0.14.0.tar.gz"
 ---> Using cache
 ---> 1f95cce5cb4c
Step 53/72 : RUN set -xe &&         DIR=/tmp/libass &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/libass/libass/archive/${LIBASS_VERSION}.tar.gz &&        echo ${LIBASS_SHA256SUM} | sha256sum --check &&         tar -zx --strip-components=1 -f ${LIBASS_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> c62eb1ebc430
Step 54/72 : ARG KVAZAAR_VERSION=1.2.0
 ---> Using cache
 ---> e964d3171bdb
Step 55/72 : RUN set -xe &&         DIR=/tmp/kvazaar &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sLO https://github.com/ultravideo/kvazaar/archive/v${KVAZAAR_VERSION}.tar.gz &&        tar -zx --strip-components=1 -f v${KVAZAAR_VERSION}.tar.gz &&         ./autogen.sh &&         ./configure -prefix="${PREFIX}" --disable-static --enable-shared &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 8da8ee5dbbe1
Step 56/72 : ARG AOM_VERSION=v1.0.0
 ---> Using cache
 ---> 991be1c69eba
Step 57/72 : RUN set -xe && 	DIR=/tmp/aom &&         git clone --branch ${AOM_VERSION} --depth 1 https://aomedia.googlesource.com/aom ${DIR} ;         cd ${DIR} ;         rm -rf CMakeCache.txt CMakeFiles ;         mkdir -p ./aom_build ;         cd ./aom_build ;         cmake -DCMAKE_INSTALL_PREFIX="${PREFIX}" -DBUILD_SHARED_LIBS=1 ..;         make ;         make install ;         rm -rf ${DIR}
 ---> Using cache
 ---> fe8841970a65
Step 58/72 : ARG X264_VERSION=20170226-2245-stable
 ---> Using cache
 ---> 305730e163ba
Step 59/72 : RUN set -xe &&         DIR=/tmp/x264 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x264/snapshots/x264-snapshot-${X264_VERSION}.tar.bz2 |         tar -jx --strip-components=1 &&         ./configure --prefix="${PREFIX}" --enable-shared --enable-pic --disable-cli &&         make &&         make install &&         rm -rf ${DIR}
 ---> Using cache
 ---> 72efa361684d
Step 60/72 : ARG X265_VERSION=3.1.1
 ---> Using cache
 ---> 670164e32ae2
Step 61/72 : RUN set -xe &&         DIR=/tmp/x265 &&         mkdir -p ${DIR} &&         cd ${DIR} &&         curl -sL https://download.videolan.org/pub/videolan/x265/x265_${X265_VERSION}.tar.gz  |         tar -zx &&         cd x265_${X265_VERSION}/build/linux &&         sed -i "/-DEXTRA_LIB/ s/$/ -DCMAKE_INSTALL_PREFIX=\${PREFIX}/" multilib.sh &&         sed -i "/^cmake/ s/$/ -DENABLE_CLI=OFF/" multilib.sh &&         ./multilib.sh &&         make -C 8bit install &&         rm -rf ${DIR}
 ---> Using cache
 ---> c34608d39c02
Step 62/72 : ENV FFMPEG_VERSION=3.0.12
 ---> Using cache
 ---> d1315226856b
Step 63/72 : RUN set -xe &&         DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         curl -sLO https://ffmpeg.org/releases/ffmpeg-${FFMPEG_VERSION}.tar.bz2 &&         tar -jx --strip-components=1 -f ffmpeg-${FFMPEG_VERSION}.tar.bz2
 ---> Using cache
 ---> 2ad2d2dcb575
Step 64/72 : RUN set -xe &&         DIR=/tmp/ffmpeg && mkdir -p ${DIR} && cd ${DIR} &&         ./configure         --disable-debug         --disable-doc         --disable-ffplay         --enable-shared         --enable-avresample         --enable-libopencore-amrnb         --enable-libopencore-amrwb         --enable-gpl         --enable-libass         --enable-libfreetype         --enable-libvidstab         --enable-libmp3lame                  --enable-libopus         --enable-libtheora         --enable-libvorbis         --enable-libvpx         --enable-libwebp         --enable-libx265         --enable-libxvid         --enable-libx264         --enable-nonfree         --enable-gnutls         --enable-libfdk_aac                          --enable-postproc         --enable-small         --enable-version3         --extra-cflags="-I${PREFIX}/include"         --extra-ldflags="-L${PREFIX}/lib"         --extra-libs=-ldl         --prefix="${PREFIX}" &&         make &&         make install &&         make distclean &&         hash -r &&         cd tools &&         make qt-faststart &&         cp qt-faststart ${PREFIX}/bin
 ---> Using cache
 ---> 52aedb1042be
Step 65/72 : RUN set -xe &&         rm -f /usr/local/bin/nasm /usr/local/bin/ndisasm &&         ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ &&         cp ${PREFIX}/bin/* /usr/local/bin/ &&         cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ &&         LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf
 ---> Using cache
 ---> bd0675c91557
Step 66/72 : FROM        base AS release
 ---> c3edae8e8da5
Step 67/72 : LABEL maintainer="Julien Rottenberg <julien@rottenberg.info>"
 ---> Using cache
 ---> 54298f99cede
Step 68/72 : LABEL ffmpeg=true
 ---> Using cache
 ---> 3de4463dd5c7
Step 69/72 : CMD         ["-version"]
 ---> Using cache
 ---> 8ff685e43aea
Step 70/72 : ENTRYPOINT  ["ffmpeg"]
 ---> Using cache
 ---> 08bf25139a1a
Step 71/72 : ENV         LD_LIBRARY_PATH=/usr/local/lib
 ---> Using cache
 ---> 95fa66a1829d
Step 72/72 : COPY --from=build /usr/local /usr/local/
 ---> ae9088a4d323
Successfully built ae9088a4d323
Successfully tagged docker-images/3.0/ubuntu:latest
