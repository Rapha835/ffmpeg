# ffmpeg - http://ffmpeg.org/download.html
#
# https://hub.docker.com/r/jrottenberg/ffmpeg/
#
#

FROM        alpine:3.8 AS base

RUN set -xe && \
        apk add --no-cache --update libgcc libstdc++ ca-certificates libcrypto1.0 libssl1.0 libgomp expat git tzdata gnutls

FROM        base AS build

WORKDIR     /tmp/workdir

ARG        PKG_CONFIG_PATH=/opt/ffmpeg/lib/pkgconfig
ARG        LD_LIBRARY_PATH=/opt/ffmpeg/lib
ARG        PREFIX=/opt/ffmpeg
ARG        MAKEFLAGS="-j2"

RUN set -xe && \
        buildDeps="autoconf \
                   automake \
                   bash \
                   binutils \
                   bzip2 \
                   cmake \
                   coreutils \
                   curl \
                   diffutils \
                   expat-dev \
                   file \
                   g++ \
                   gcc \
                   gnutls-dev \
                   gperf \
                   libtool \
                   make \
                   openssl-dev \
                   python \
                   tar \
                   xz \
                   yasm \
                   zlib-dev" && \
        apk add --no-cache --update ${buildDeps}
%%RUN%%

RUN set -xe && \
    rm -f /usr/local/bin/nasm /usr/local/bin/ndisasm && \
    ldd ${PREFIX}/bin/ffmpeg | grep opt/ffmpeg | cut -d ' ' -f 3 | xargs -i cp {} /usr/local/lib/ && \
    cp ${PREFIX}/bin/* /usr/local/bin/ && \
    cp -r ${PREFIX}/share/ffmpeg /usr/local/share/ && \
    LD_LIBRARY_PATH=/usr/local/lib ffmpeg -buildconf

### Release Stage
FROM        base AS release
LABEL maintainer="Julien Rottenberg <julien@rottenberg.info>"
LABEL ffmpeg=true
LABEL ffmpeg_version=%%FFMPEG_VERSION%%

CMD         ["-version"]
ENTRYPOINT  ["ffmpeg"]

COPY --from=build /usr/local /usr/local

# Let's make sure the app built correctly
# Convenient to verify on https://hub.docker.com/r/jrottenberg/ffmpeg/builds/ console output
