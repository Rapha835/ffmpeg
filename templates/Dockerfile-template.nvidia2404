# ffmpeg - http://ffmpeg.org/download.html
#
# From https://trac.ffmpeg.org/wiki/CompilationGuide/Ubuntu
#
# https://hub.docker.com/r/jrottenberg/ffmpeg/
#
#
# Stage 1: Build ( https://hub.docker.com/r/nvidia/cuda )
FROM nvidia/cuda:12.6.2-devel-ubuntu24.04 AS builder

ENV	    NVIDIA_DRIVER_CAPABILITIES=compute,utility,video
ENV	    DEBIAN_FRONTEND=noninteractive


%%ENV%%

# Note: I don't think we need 'ca-certificates'
ARG DEBIAN_FRONTEND=noninteractive
RUN     apt-get -yqq update && \
        apt-get install -yq --no-install-recommends curl jq python3 python3-requests less tree file vim

RUN      buildDeps="autoconf \
                    automake \
                    cmake \
                    build-essential \
                    texinfo \
                    curl \
                    wget \
                    tar \
                    bzip2 \
                    libexpat1-dev \
                    gcc \
                    git \
                    git-core \
                    gperf \
                    libtool \
                    make \
                    meson \
                    ninja-build \
                    nasm \
                    perl \
                    pkg-config \
                    python3 \
                    yasm \
                    zlib1g-dev \
                    libfreetype6-dev \
                    libgnutls28-dev \
                    libsdl2-dev \
                    libva-dev \
                    libvdpau-dev \
                    libnuma-dev \
                    libdav1d-dev \
                    openssl \
                    libssl-dev \
                    expat \
                    libgomp1 \
                    ca-certificates \
                    libxcb-shape0-dev \
                    libavformat-dev" && \
        apt-get -yqq update && \
        apt-get install -yq --no-install-recommends ${buildDeps}


WORKDIR     /tmp/workdir

COPY generate-source-of-truth-ffmpeg-versions.py /tmp/workdir
COPY download_tarballs.sh /tmp/workdir
COPY build_source.sh /tmp/workdir
COPY install_ffmpeg.sh /tmp/workdir

%%RUN%%


# Stage 2: Final Image ( shrink the size back down )
# FROM nvidia/cuda:12.6.2-runtime-ubuntu24.04
FROM nvidia/cuda:12.6.2-base-ubuntu24.04 AS runtime
# We used to use runtime, but I switched us to base, as it is significantly-smaller.
# (~ 80Megs ) base: Includes the CUDA runtime (cudart)
# (~ 1.4Gigs) runtime: Builds on the base and includes the CUDA math libraries⁠, and NCCL⁠.
# (~ 4 Gigs ) devel: Builds on the runtime and includes headers, development tools for building CUDA images.

# COPY --from=builder /usr/local /usr/local/
# copy only needed files, without copying nvidia dev files
COPY --from=builder /usr/local/bin /usr/local/bin/
COPY --from=builder /usr/local/share /usr/local/share/
COPY --from=builder /usr/local/lib /usr/local/lib/
COPY --from=builder /usr/local/include /usr/local/include/

# Copy fonts and fontconfig from builder
COPY --from=builder /usr/share/fonts /usr/share/fonts
COPY --from=builder /usr/share/fontconfig /usr/share/fontconfig
COPY --from=builder /usr/bin/fc-* /usr/bin/

ENV	    NVIDIA_DRIVER_CAPABILITIES=compute,utility,video
ENV	    DEBIAN_FRONTEND=nonintercative
WORKDIR     /tmp/workdir

RUN     apt-get -yqq update && \
        apt-get install -yq --no-install-recommends ca-certificates expat libgomp1 libxcb-shape0-dev && \
        apt-get autoremove -y && \
        apt-get clean -y

LABEL       org.opencontainers.image.authors="julien@rottenberg.info" \
            org.opencontainers.image.source=https://github.com/jrottenberg/ffmpeg

ENV         LD_LIBRARY_PATH=/usr/local/lib:/usr/local/lib64

CMD         ["--help"]
ENTRYPOINT  ["ffmpeg"]
